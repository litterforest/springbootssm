<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false" scan="false" scanPeriod="30 minutes">
	
	<springProfile name="test">
		
		<!--输出到控制台 ConsoleAppender -->
		<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
			<!--展示格式 layout -->
			<layout class="ch.qos.logback.classic.PatternLayout">
				<pattern>%d %-5p [%c{5}] - %m%n</pattern>
			</layout>
		</appender>
	
		<root level="debug">
			<appender-ref ref="console" />
		</root>
		
	</springProfile>
	
	<springProfile name="prod">
	
		<appender name="file"
			class="ch.qos.logback.core.rolling.RollingFileAppender">
			<!--如果只是想要 Error 级别的日志，那么需要过滤一下，默认是 info 级别的，ThresholdFilter -->
			<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
				<level>error</level>
			</filter>
			<!--日志名称，如果没有File 属性，那么只会使用FileNamePattern的文件路径规则 如果同时有<File>和<FileNamePattern>，那么当天日志是<File>，明天会自动把今天 
				的日志改名为今天的日期。即，<File> 的日志都是当天的。 -->
			<File>C:\\tmp\\spring-boot-test.log</File>
			<!--滚动策略，按照时间滚动 TimeBasedRollingPolicy -->
			<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间 -->
				<FileNamePattern>C:\\tmp\\spring-boot-test.%d{yyyy-MM-dd}.log</FileNamePattern>
				<!--只保留最近90天的日志 -->
				<maxHistory>90</maxHistory>
				<!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志 -->
				<!--<totalSizeCap>1GB</totalSizeCap> -->
			</rollingPolicy>
			<!--日志输出编码格式化 -->
			<encoder>
				<charset>UTF-8</charset>
				<pattern>%d %-5p [%c{5}] - %m%n</pattern>
			</encoder>
		</appender>
	
		<root level="error">
			<appender-ref ref="file" />
		</root>
		
	</springProfile>

</configuration>